#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp SEMI>, <&kp COLON>;
        };

			  td1: td1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD1";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp DQT>;
				};
				macros {
					m0: m0 {
							compatible = "zmk,behavior-macro";
							#binding-cells = <0>;
							bindings
									= <&macro_tap &kp G &kp U &kp S &kp S &kp Y &kp EXCL &kp AT
										&kp N6 &kp N5 &kp N1 &kp N0 >;
					};
					m1: m1 {
							compatible = "zmk,behavior-macro";
							#binding-cells = <0>;
							bindings
									= <&macro_tap &kp N6 &kp N5 &kp N1 &kp N0 &kp J &kp A &kp S
										&kp N &kp G &kp ASTRK &kp AT>;
					};
					m2: m2 {
							compatible = "zmk,behavior-macro";
							#binding-cells = <0>;
							bindings
									= <&macro_tap &kp N &kp G &kp O &kp C &kp K &kp I &kp E &kp U
										&kp T &kp R &kp A &kp N &kp G &kp DOT
										&kp N &kp G &kp U &kp Y &kp E &kp N
										&kp AT &kp A &kp N &kp Z
										&kp DOT &kp C &kp O &kp M>;
					};
					m3: m3 {
							compatible = "zmk,behavior-macro";
							#binding-cells = <0>;
							bindings
									= <&macro_tap &kp N &kp G &kp U &kp Y &kp E &kp N &kp N1 &kp N8>;
					};
			    m4: m4 {
							compatible = "zmk,behavior-macro";
							#binding-cells = <0>;
							bindings
									= <&macro_tap &kp N2 &kp N5 &kp N1 &kp N2
										&kp N2 &kp N0 &kp N1 &kp N5>;
					};
    		};
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        label = "RGB_ENCODER";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESC    			&kp Q  &kp W      &kp E         &kp R  &kp T           &kp UP_ARROW     &kp Y        &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp CAPS				&kp A  &kp S      &kp D         &kp F  &kp G           &kp DOWN_ARROW   &kp H        &kp J  &kp K      &kp L    &td0      &td1
&kp LCTRL  			&kp Z  &kp X      &kp C         &kp V  &kp B           &kp LEFT_ARROW   &kp N        &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
									     &kp ENTER  &mt LGUI TAB 	&mo 1  &mt LSHFT ENTER &kp RIGHT_ARROW  &kp SPACE    &mo 2  &kp LC(LS(LA))
                                                             			     &kp ENTER
            >;

            label = "QWERTY";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N1           &kp N2         &kp N3        &kp N4        &kp N5				&mmv MOVE_UP     &kp N6   &kp N7     &kp N8       &kp N9      &kp N0    &trans
&trans  &kp F1   				 &kp F2   	 		&kp F3  			&kp F4 			  &kp F5				&mmv MOVE_DOWN   &kp LEFT &kp DOWN   &kp UP       &kp RIGHT   &none  	 	&none
&trans  &bt BT_CLR_ALL 	 &bt BT_SEL 0  	&bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3	&mmv MOVE_LEFT   &none 		&none 		 &trans  			&trans  		&trans		&none
                         &kp C_MUTE     &trans        &trans        &trans				&mmv MOVE_RIGHT  &trans   &trans     &trans
                                                                                  &mkp LCLK
            >;

            label = "NUMBER";
            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH   &kp DLLR   &kp PRCNT    &mmv MOVE_UP     &kp LBRC   &kp RBRC   &kp LPAR   &kp RPAR  	&kp PLUS   &trans
&trans  &kp TILDE     &kp GRAVE     &kp BSLH   &kp PIPE   &kp CARET    &mmv MOVE_DOWN   &kp ASTRK  &kp AMPS  	&kp EQUAL  &kp UNDER 	&kp MINUS  &none
&trans  &none  				&none  				&none      &none      &none     	 &mmv MOVE_LEFT   &kp LBKT   &kp RBKT   &trans  	 &trans  		&trans  	 &none
                      &trans        &trans     &mo 3     	&trans    	 &mmv MOVE_RIGHT  &trans     &trans     &trans
                                                                       &mkp LCLK
            >;

            label = "SYMBOL";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&trans  &kp F1      						&kp F2      					&kp F3      &kp F4     	&kp F5      &mmv MOVE_UP 		 &kp F6       &kp F7     	&kp F8       &kp F9      &kp F10				&trans
&trans  &m0 										&m1   								&m2   			&m3					&m4    			&mmv MOVE_DOWN   &kp K_PP 		&kp K_PREV  &kp K_NEXT   &kp K_MUTE  &kp K_VOL_UP 	&kp K_VOL_DN
&trans  &kp LG(LS(NUMBER_3)) 		&kp LG(LS(NUMBER_4))  &none  			&none     	&none    		&mmv MOVE_LEFT   &none       	&none     	&trans  		 &trans   	 &trans 				&none
                    						&kp C_MUTE  					&trans      &mo 3     	&trans      &mmv MOVE_RIGHT  &trans       &trans     	&trans
                                                                   											  &mkp LCLK
            >;

            label = "FN";
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
